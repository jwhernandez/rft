// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Scripts.Comun.SistemasExternos;
import libreria.Accion;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>VEP_CerrarCaja</b><br>
 * Generated     : <b>2017/02/22 6:41:16 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  febrero 22, 2017
 * @author rft
 */
public abstract class VEP_CerrarCajaHelper extends libreria.Accion
{
	/**
	 * IEBrowserVEP: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 * 		.documentName : RegularExpression(http://cer\.infocom\.ice/VEPWeb*)
	 */
	protected BrowserTestObject BrowserVEP() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("BrowserVEP"));
	}
	/**
	 * IEBrowserVEP: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 * 		.documentName : RegularExpression(http://cer\.infocom\.ice/VEPWeb*)
	 */
	protected BrowserTestObject BrowserVEP(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("BrowserVEP"), anchor, flags);
	}
	
	/**
	 * BtonCierre: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Hacer Cierre
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : _finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BtonCierre() 
	{
		return new GuiTestObject(
                        getMappedTestObject("BtonCierre"));
	}
	/**
	 * BtonCierre: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Hacer Cierre
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : _finish
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BtonCierre(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("BtonCierre"), anchor, flags);
	}
	
	/**
	 * BtonConsultar: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Consultar
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BtonConsultar() 
	{
		return new GuiTestObject(
                        getMappedTestObject("BtonConsultar"));
	}
	/**
	 * BtonConsultar: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Consultar
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BtonConsultar(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("BtonConsultar"), anchor, flags);
	}
	
	/**
	 * ComboSector: with default state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject ComboSector() 
	{
		return new GuiTestObject(
                        getMappedTestObject("ComboSector"));
	}
	/**
	 * ComboSector: with specific test context and state.
	 *		.class : Html.ComboLBox
	 */
	protected GuiTestObject ComboSector(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("ComboSector"), anchor, flags);
	}
	
	/**
	 * HacerCierresubmit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Hacer Cierre
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : cierre
	 * 		.classIndex : 0
	 */
	protected GuiTestObject HacerCierre() 
	{
		return new GuiTestObject(
                        getMappedTestObject("HacerCierre"));
	}
	/**
	 * HacerCierresubmit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : Hacer Cierre
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : cierre
	 * 		.classIndex : 0
	 */
	protected GuiTestObject HacerCierre(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("HacerCierre"), anchor, flags);
	}
	
	/**
	 * Mensajes: with default state.
	 *		.tag : TABLE
	 * 		.text : RegularExpression(*)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.contentText : RegularExpression(*)
	 * 		.classIndex : 2
	 */
	protected StatelessGuiSubitemTestObject Mensaje() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("Mensaje"));
	}
	/**
	 * Mensajes: with specific test context and state.
	 *		.tag : TABLE
	 * 		.text : RegularExpression(*)
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.caption : 
	 * 		.contentText : RegularExpression(*)
	 * 		.classIndex : 2
	 */
	protected StatelessGuiSubitemTestObject Mensaje(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("Mensaje"), anchor, flags);
	}
	
	/**
	 * Menu_Cierre: with default state.
	 *		.id : oCMenu_Cierre
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject Menu_Cierre() 
	{
		return new GuiTestObject(
                        getMappedTestObject("Menu_Cierre"));
	}
	/**
	 * Menu_Cierre: with specific test context and state.
	 *		.id : oCMenu_Cierre
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject Menu_Cierre(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("Menu_Cierre"), anchor, flags);
	}
	
	/**
	 * OpcionCerrar_Caja: with default state.
	 *		.id : oCMenu_Cajas
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OpcionCerrar_Caja() 
	{
		return new GuiTestObject(
                        getMappedTestObject("OpcionCerrar_Caja"));
	}
	/**
	 * OpcionCerrar_Caja: with specific test context and state.
	 *		.id : oCMenu_Cajas
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 0
	 */
	protected GuiTestObject OpcionCerrar_Caja(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("OpcionCerrar_Caja"), anchor, flags);
	}
	
	/**
	 * Opcion2: with default state.
	 *		.id : oCMenu_Notas
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject OpcionCerrar_Cajero() 
	{
		return new GuiTestObject(
                        getMappedTestObject("OpcionCerrar_Cajero"));
	}
	/**
	 * Opcion2: with specific test context and state.
	 *		.id : oCMenu_Notas
	 * 		.title : 
	 * 		.class : Html.DIV
	 * 		.classIndex : 1
	 */
	protected GuiTestObject OpcionCerrar_Cajero(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("OpcionCerrar_Cajero"), anchor, flags);
	}
	
	/**
	 * Sector: with default state.
	 *		.text : -- Seleccionar -- TELECOMUNICACIONES
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : idSector
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject Sector() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("Sector"));
	}
	/**
	 * Sector: with specific test context and state.
	 *		.text : -- Seleccionar -- TELECOMUNICACIONES
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : idSector
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject Sector(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("Sector"), anchor, flags);
	}
	
	/**
	 * VentanillaElectrónicaDePago: with default state.
	 *		.title : Ventanilla Electrónica de Pago
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(http://cer\.infocom\.ice/VEPWeb*)
	 */
	protected DocumentTestObject VentanillaElectrónica() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("VentanillaElectrónica"));
	}
	/**
	 * VentanillaElectrónicaDePago: with specific test context and state.
	 *		.title : Ventanilla Electrónica de Pago
	 * 		.class : Html.HtmlDocument
	 * 		.url : RegularExpression(http://cer\.infocom\.ice/VEPWeb*)
	 */
	protected DocumentTestObject VentanillaElectrónica(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("VentanillaElectrónica"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point HtmlTable_2_contents object in the SUT.
	 */
	protected IFtVerificationPoint HtmlTable_2_contentsVP() 
	{
		return vp("HtmlTable_2_contents");
	}
	protected IFtVerificationPoint HtmlTable_2_contentsVP(TestObject anchor)
	{
		return vp("HtmlTable_2_contents", anchor);
	}
	
	/**
	 * Locate and return the verification point idSector_selected object in the SUT.
	 */
	protected IFtVerificationPoint idSector_selectedVP() 
	{
		return vp("idSector_selected");
	}
	protected IFtVerificationPoint idSector_selectedVP(TestObject anchor)
	{
		return vp("idSector_selected", anchor);
	}
	
	

	protected VEP_CerrarCajaHelper()
	{
		setScriptName("Scripts.Comun.SistemasExternos.VEP_CerrarCaja");
	}
	
}

