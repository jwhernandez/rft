// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Scripts.Comun.SistemasExternos;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>ASRM</b><br>
 * Generated     : <b>2016/09/28 12:46:46 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  septiembre 28, 2016
 * @author rft
 */
public abstract class ASRMHelper extends RationalTestScript
{
	/**
	 * _Cerrar: with default state.
	 *		.text : &Cerrar
	 * 		.class : .Pushbutton
	 * 		.name : &Cerrar
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _Cerrarbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("_Cerrarbutton"));
	}
	/**
	 * _Cerrar: with specific test context and state.
	 *		.text : &Cerrar
	 * 		.class : .Pushbutton
	 * 		.name : &Cerrar
	 * 		.classIndex : 0
	 */
	protected GuiTestObject _Cerrarbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("_Cerrarbutton"), anchor, flags);
	}
	
	/**
	 * ActualizarInformación: with default state.
	 *		.text : Actualizar Información
	 * 		.class : TFrmActualizar_Datos
	 * 		.processName : Project_Actualizar_ASRM.exe
	 * 		.name : Actualizar Información
	 */
	protected TopLevelSubitemTestObject actualizarInformaciónwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("actualizarInformaciónwindow"));
	}
	/**
	 * ActualizarInformación: with specific test context and state.
	 *		.text : Actualizar Información
	 * 		.class : TFrmActualizar_Datos
	 * 		.processName : Project_Actualizar_ASRM.exe
	 * 		.name : Actualizar Información
	 */
	protected TopLevelSubitemTestObject actualizarInformaciónwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("actualizarInformaciónwindow"), anchor, flags);
	}
	
	/**
	 * atvgfernandezAsp128CProgramFilesX86JavaJre6BinJavawExeCProgramFilesX86JavaJre150_22BinJavawExe: with default state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject atvgfernandezAsp128CProgramFil() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("atvgfernandezAsp128CProgramFil"));
	}
	/**
	 * atvgfernandezAsp128CProgramFilesX86JavaJre6BinJavawExeCProgramFilesX86JavaJre150_22BinJavawExe: with specific test context and state.
	 *		.text : null
	 * 		.class : Edit
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject atvgfernandezAsp128CProgramFil(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("atvgfernandezAsp128CProgramFil"), anchor, flags);
	}
	
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : MS Internet Explorer
	 * 		.processName : iexplore.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * ComboListBox: with default state.
	 *		.class : .Combobox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject comboListBoxcomboBox() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("comboListBoxcomboBox"));
	}
	/**
	 * ComboListBox: with specific test context and state.
	 *		.class : .Combobox
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject comboListBoxcomboBox(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("comboListBoxcomboBox"), anchor, flags);
	}
	
	/**
	 * ConsultarNumero: with default state.
	 *		.text : Consultar Numero
	 * 		.class : TGroupBox
	 * 		.name : Consultar Numero
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject consultarNumerowindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("consultarNumerowindow"));
	}
	/**
	 * ConsultarNumero: with specific test context and state.
	 *		.text : Consultar Numero
	 * 		.class : TGroupBox
	 * 		.name : Consultar Numero
	 * 		.classIndex : 1
	 */
	protected GuiSubitemTestObject consultarNumerowindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("consultarNumerowindow"), anchor, flags);
	}
	
	/**
	 * IBMRationalFunctionalTesterXMLLog: with default state.
	 *		.class : Html.HtmlDocument
	 * 		.title : IBM Rational Functional Tester XML log
	 * 		.url : file://C:\Users\rft\IBM\rationalsdp\workspace\RFT_ICE_logs\Scripts.Comun.Sistema ...
	 */
	protected DocumentTestObject document_ibmRationalFunctional() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ibmRationalFunctional"));
	}
	/**
	 * IBMRationalFunctionalTesterXMLLog: with specific test context and state.
	 *		.class : Html.HtmlDocument
	 * 		.title : IBM Rational Functional Tester XML log
	 * 		.url : file://C:\Users\rft\IBM\rationalsdp\workspace\RFT_ICE_logs\Scripts.Comun.Sistema ...
	 */
	protected DocumentTestObject document_ibmRationalFunctional(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_ibmRationalFunctional"), anchor, flags);
	}
	
	/**
	 * NewTextDocumentNotepad: with default state.
	 *		.text : New Text Document - Notepad
	 * 		.class : Notepad
	 * 		.processName : NOTEPAD.EXE
	 * 		.name : New Text Document - Notepad
	 */
	protected TopLevelSubitemTestObject newTextDocumentNotepadwindow() 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("newTextDocumentNotepadwindow"));
	}
	/**
	 * NewTextDocumentNotepad: with specific test context and state.
	 *		.text : New Text Document - Notepad
	 * 		.class : Notepad
	 * 		.processName : NOTEPAD.EXE
	 * 		.name : New Text Document - Notepad
	 */
	protected TopLevelSubitemTestObject newTextDocumentNotepadwindow(TestObject anchor, long flags) 
	{
		return new TopLevelSubitemTestObject(
                        getMappedTestObject("newTextDocumentNotepadwindow"), anchor, flags);
	}
	
	/**
	 * OK: with default state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"));
	}
	/**
	 * OK: with specific test context and state.
	 *		.text : OK
	 * 		.class : .Pushbutton
	 * 		.name : OK
	 * 		.classIndex : 0
	 */
	protected GuiTestObject okbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("okbutton"), anchor, flags);
	}
	
	/**
	 * Open: with default state.
	 *		.text : Open
	 * 		.class : .Pushbutton
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiTestObject openbutton() 
	{
		return new GuiTestObject(
                        getMappedTestObject("openbutton"));
	}
	/**
	 * Open: with specific test context and state.
	 *		.text : Open
	 * 		.class : .Pushbutton
	 * 		.name : Open
	 * 		.classIndex : 0
	 */
	protected GuiTestObject openbutton(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("openbutton"), anchor, flags);
	}
	
	/**
	 * Pagetablist: with default state.
	 *		.class : .Pagetablist
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject pagetablistpageTabList() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("pagetablistpageTabList"));
	}
	/**
	 * Pagetablist: with specific test context and state.
	 *		.class : .Pagetablist
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject pagetablistpageTabList(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("pagetablistpageTabList"), anchor, flags);
	}
	
	/**
	 * TPanel: with default state.
	 *		.text : null
	 * 		.class : TPanel
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tPanelwindow() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tPanelwindow"));
	}
	/**
	 * TPanel: with specific test context and state.
	 *		.text : null
	 * 		.class : TPanel
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject tPanelwindow(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("tPanelwindow"), anchor, flags);
	}
	
	/**
	 * Text: with default state.
	 *		.class : .Text
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject texttext() 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("texttext"));
	}
	/**
	 * Text: with specific test context and state.
	 *		.class : .Text
	 * 		.name : null
	 * 		.classIndex : 0
	 */
	protected GuiSubitemTestObject texttext(TestObject anchor, long flags) 
	{
		return new GuiSubitemTestObject(
                        getMappedTestObject("texttext"), anchor, flags);
	}
	
	

	protected ASRMHelper()
	{
		setScriptName("Scripts.Comun.SistemasExternos.ASRM");
	}
	
}

