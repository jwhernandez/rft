// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Scripts.Comun;
import libreria.Accion;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>EsperaEstadoRED</b><br>
 * Generated     : <b>2017/04/18 11:10:34 AM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  abril 18, 2017
 * @author rft
 */
public abstract class EsperaEstadoREDHelper extends libreria.Accion
{
	/**
	 * BtonConsultaPedido: with default state.
	 *		.text : Consulta
	 * 		.href : javascript:void(0)
	 * 		.id : RegularExpression(s.*mb)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BotonConsultaPedido() 
	{
		return new GuiTestObject(
                        getMappedTestObject("BotonConsultaPedido"));
	}
	/**
	 * BtonConsultaPedido: with specific test context and state.
	 *		.text : Consulta
	 * 		.href : javascript:void(0)
	 * 		.id : RegularExpression(s.*mb)
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject BotonConsultaPedido(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("BotonConsultaPedido"), anchor, flags);
	}
	
	/**
	 * ICEEstadoRED: with default state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICEEstadoRED
	 */
	protected SiebPicklistTestObject EstadoRED() 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("EstadoRED"));
	}
	/**
	 * ICEEstadoRED: with specific test context and state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICEEstadoRED
	 */
	protected SiebPicklistTestObject EstadoRED(TestObject anchor, long flags) 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("EstadoRED"), anchor, flags);
	}
	
	/**
	 * EstadoREDPI: with default state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICEEstadoRED
	 */
	protected SiebPicklistTestObject EstadoREDPI() 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("EstadoREDPI"));
	}
	/**
	 * EstadoREDPI: with specific test context and state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICEEstadoRED
	 */
	protected SiebPicklistTestObject EstadoREDPI(TestObject anchor, long flags) 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("EstadoREDPI"), anchor, flags);
	}
	
	/**
	 * HIQuery: with default state.
	 *		ClassName : SiebToolbar
	 * 		.class : SiebToolbar
	 * 		RepositoryName : HIQuery
	 */
	protected SiebToolbarTestObject HIQuery() 
	{
		return new SiebToolbarTestObject(
                        getMappedTestObject("HIQuery"));
	}
	/**
	 * HIQuery: with specific test context and state.
	 *		ClassName : SiebToolbar
	 * 		.class : SiebToolbar
	 * 		RepositoryName : HIQuery
	 */
	protected SiebToolbarTestObject HIQuery(TestObject anchor, long flags) 
	{
		return new SiebToolbarTestObject(
                        getMappedTestObject("HIQuery"), anchor, flags);
	}
	
	/**
	 * NroRED: with default state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : ICE Recipient Number
	 */
	protected SiebTextTestObject NroRED() 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("NroRED"));
	}
	/**
	 * NroRED: with specific test context and state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : ICE Recipient Number
	 */
	protected SiebTextTestObject NroRED(TestObject anchor, long flags) 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("NroRED"), anchor, flags);
	}
	
	/**
	 * NroREDPI: with default state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : ICE Recipient Number
	 */
	protected SiebTextTestObject NroREDPI() 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("NroREDPI"));
	}
	/**
	 * NroREDPI: with specific test context and state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : ICE Recipient Number
	 */
	protected SiebTextTestObject NroREDPI(TestObject anchor, long flags) 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("NroREDPI"), anchor, flags);
	}
	
	/**
	 * TipoAutenticacion: with default state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICE Authentication Type
	 */
	protected SiebPicklistTestObject TipoAutenticacion() 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("TipoAutenticacion"));
	}
	/**
	 * TipoAutenticacion: with specific test context and state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICE Authentication Type
	 */
	protected SiebPicklistTestObject TipoAutenticacion(TestObject anchor, long flags) 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("TipoAutenticacion"), anchor, flags);
	}
	
	/**
	 * TipoAutenticacionPI: with default state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICE Authentication Type
	 */
	protected SiebPicklistTestObject TipoAutenticacionPI() 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("TipoAutenticacionPI"));
	}
	/**
	 * TipoAutenticacionPI: with specific test context and state.
	 *		ClassName : SiebPicklist
	 * 		.class : SiebPicklist
	 * 		RepositoryName : ICE Authentication Type
	 */
	protected SiebPicklistTestObject TipoAutenticacionPI(TestObject anchor, long flags) 
	{
		return new SiebPicklistTestObject(
                        getMappedTestObject("TipoAutenticacionPI"), anchor, flags);
	}
	
	

	protected EsperaEstadoREDHelper()
	{
		setScriptName("Scripts.Comun.EsperaEstadoRED");
	}
	
}

