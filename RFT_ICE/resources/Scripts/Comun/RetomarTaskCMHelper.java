// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources.Scripts.Comun;
import libreria.Accion;
import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>RetomarTaskCM</b><br>
 * Generated     : <b>2017/02/21 12:53:26 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 7 x86 6.1 <br>
 * 
 * @since  febrero 21, 2017
 * @author rft
 */
public abstract class RetomarTaskCMHelper extends libreria.Accion
{
	/**
	 * AceptarMensajeHTMLSiebel: with default state.
	 *		.text : RegularExpression((Aceptar|OK))
	 * 		.class : Html.DialogButton
	 * 		.disabled : false
	 * 		.classIndex : 0
	 */
	protected GuiTestObject AceptarMensajeHTMLSiebel() 
	{
		return new GuiTestObject(
                        getMappedTestObject("AceptarMensajeHTMLSiebel"));
	}
	/**
	 * AceptarMensajeHTMLSiebel: with specific test context and state.
	 *		.text : RegularExpression((Aceptar|OK))
	 * 		.class : Html.DialogButton
	 * 		.disabled : false
	 * 		.classIndex : 0
	 */
	protected GuiTestObject AceptarMensajeHTMLSiebel(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("AceptarMensajeHTMLSiebel"), anchor, flags);
	}
	
	/**
	 * Context: with default state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : Context
	 */
	protected SiebTextTestObject Contexto() 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("Contexto"));
	}
	/**
	 * Context: with specific test context and state.
	 *		ClassName : SiebText
	 * 		.class : SiebText
	 * 		RepositoryName : Context
	 */
	protected SiebTextTestObject Contexto(TestObject anchor, long flags) 
	{
		return new SiebTextTestObject(
                        getMappedTestObject("Contexto"), anchor, flags);
	}
	
	/**
	 * ExecuteQuery: with default state.
	 *		ClassName : SiebButton
	 * 		.class : SiebButton
	 * 		RepositoryName : ExecuteQuery
	 */
	protected SiebButtonTestObject ExecuteQuery() 
	{
		return new SiebButtonTestObject(
                        getMappedTestObject("ExecuteQuery"));
	}
	/**
	 * ExecuteQuery: with specific test context and state.
	 *		ClassName : SiebButton
	 * 		.class : SiebButton
	 * 		RepositoryName : ExecuteQuery
	 */
	protected SiebButtonTestObject ExecuteQuery(TestObject anchor, long flags) 
	{
		return new SiebButtonTestObject(
                        getMappedTestObject("ExecuteQuery"), anchor, flags);
	}
	
	/**
	 * SiebList: with default state.
	 *		ClassName : SiebList
	 * 		.class : SiebList
	 * 		RepositoryName : SiebList
	 */
	protected SiebListTestObject ListaTareas() 
	{
		return new SiebListTestObject(
                        getMappedTestObject("ListaTareas"));
	}
	/**
	 * SiebList: with specific test context and state.
	 *		ClassName : SiebList
	 * 		.class : SiebList
	 * 		RepositoryName : SiebList
	 */
	protected SiebListTestObject ListaTareas(TestObject anchor, long flags) 
	{
		return new SiebListTestObject(
                        getMappedTestObject("ListaTareas"), anchor, flags);
	}
	
	/**
	 * NewQuery: with default state.
	 *		ClassName : SiebButton
	 * 		.class : SiebButton
	 * 		RepositoryName : NewQuery
	 */
	protected SiebButtonTestObject NewQuery() 
	{
		return new SiebButtonTestObject(
                        getMappedTestObject("NewQuery"));
	}
	/**
	 * NewQuery: with specific test context and state.
	 *		ClassName : SiebButton
	 * 		.class : SiebButton
	 * 		RepositoryName : NewQuery
	 */
	protected SiebButtonTestObject NewQuery(TestObject anchor, long flags) 
	{
		return new SiebButtonTestObject(
                        getMappedTestObject("NewQuery"), anchor, flags);
	}
	
	/**
	 * Pestañas: with default state.
	 *		ClassName : SiebPageTabs
	 * 		.class : SiebPageTabs
	 * 		RepositoryName : SiebPageTabs
	 */
	protected SiebPageTabsTestObject Pestañas() 
	{
		return new SiebPageTabsTestObject(
                        getMappedTestObject("Pestañas"));
	}
	/**
	 * Pestañas: with specific test context and state.
	 *		ClassName : SiebPageTabs
	 * 		.class : SiebPageTabs
	 * 		RepositoryName : SiebPageTabs
	 */
	protected SiebPageTabsTestObject Pestañas(TestObject anchor, long flags) 
	{
		return new SiebPageTabsTestObject(
                        getMappedTestObject("Pestañas"), anchor, flags);
	}
	
	/**
	 * HtmlTable_0: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.contentText : Tarea actual
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject TareaActual() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("TareaActual"));
	}
	/**
	 * HtmlTable_0: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TABLE
	 * 		.contentText : Tarea actual
	 * 		.caption : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject TareaActual(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("TareaActual"), anchor, flags);
	}
	
	

	protected RetomarTaskCMHelper()
	{
		setScriptName("Scripts.Comun.RetomarTaskCM");
	}
	
}

